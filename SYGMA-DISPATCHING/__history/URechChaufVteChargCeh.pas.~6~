unit URechChaufVteChargCeh;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids;

type
  TfrmRechChaufVteChargCeh = class(TForm)
    st_chauf: TStringGrid;
    procedure FormCreate(Sender: TObject);
    procedure st_chaufDblClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmRechChaufVteChargCeh: TfrmRechChaufVteChargCeh;
  vFormSource : string;

implementation

{$R *.dfm}

uses UvteChargVeh, UImportBl;

procedure TfrmRechChaufVteChargCeh.FormCreate(Sender: TObject);
begin
 with st_chauf do
  begin
    Cells[0,0]:='N° Matricule';
    Cells[1,0]:='Nom';
    Cells[2,0]:='Prénom';
  end;
end;

procedure TfrmRechChaufVteChargCeh.FormShow(Sender: TObject);
var
  I : integer;
  Chauffs : TChauffeurArray;
  Psql:string;
begin
  Psql :='';
  Chauffs := dm.SelectChauffeur(Psql);
  st_chauf.RowCount:= Length(Chauffs)+1;

  for I := Low(Chauffs) to High(Chauffs) do
    begin
      with st_chauf do
        begin
          Cells[0,i+1] := IntToStr(Chauffs[i].Nnum_mat_chauf);
          Cells[1,i+1] := Chauffs[i].Snom_chauf;
          Cells[2,i+1] := Chauffs[i].Sprenom_chauf;
        end;
    end;
end;

procedure TfrmRechChaufVteChargCeh.st_chaufDblClick(Sender: TObject);
begin
  if vFormSource = 'frmvteChargVeh' then
    with frmvteChargVeh do
      begin
         edChauf.Text := st_chauf.Cells[0,st_chauf.Row];
         lbChauf.Caption := st_chauf.Cells[1,st_chauf.Row];
      end else
  if vFormSource = 'frmImportBl' then
    with frmImportBl do
      begin
         edChauf.Text := st_chauf.Cells[0,st_chauf.Row];
         lbChauf.Caption := st_chauf.Cells[1,st_chauf.Row];
      end;
  Close;
end;

end.
