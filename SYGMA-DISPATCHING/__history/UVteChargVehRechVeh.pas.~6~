unit UVteChargVehRechVeh;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls;

type
  TfrmVteChargVehRechVeh = class(TForm)
    GroupBox1: TGroupBox;
    Label1: TLabel;
    ednum_immat: TEdit;
    St_veh: TStringGrid;
    procedure FormCreate(Sender: TObject);
    procedure ednum_immatExit(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmVteChargVehRechVeh: TfrmVteChargVehRechVeh;
  vSourceForm :string;

implementation

{$R *.dfm}

uses records, UDM;

procedure TfrmVteChargVehRechVeh.ednum_immatExit(Sender: TObject);
var
  Psql : string;
  vehs : TVehiculeArray;
  i:integer;
begin
  Psql := ' where num_immat_veh like '+QuotedStr(ednum_immat.Text+'%');

  vehs:=dm.SelectVehicule(Psql);
  St_veh.RowCount := Length(vehs) +1;

  for I := Low(vehs) to High(vehs) do
    with St_veh do
      begin
       // Rows[i].Clear;
        Cells[0,i+1] := vehs[i].SNum_mat ;
        Cells[1,i+1] := vehs[i].SMarque;
        Cells[2,i+1] := IntToStr(vehs[i].NPTAC);
      end;
 if St_veh.RowCount>1 then St_veh.FixedRows := 1;
end;

procedure TfrmVteChargVehRechVeh.FormCreate(Sender: TObject);
begin
with St_veh do
  begin
    Cells[0,0] := 'N° Immat.' ;
    Cells[1,0] := 'marque_veh' ;
    Cells[2,0] := 'Kgs max' ;
  end;
end;

end.
