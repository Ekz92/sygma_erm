unit UvteChargVeh;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.Grids, Vcl.ExtCtrls, Vcl.ComCtrls, Data.FMTBcd, Data.DB, Data.SqlExpr;

type
  TfrmvteChargVeh = class(TForm)
    Splitter1: TSplitter;
    Panel1: TPanel;
    GroupBox4: TGroupBox;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    cbSource: TComboBox;
    edLot: TEdit;
    DateCharg: TDateTimePicker;
    rgType: TRadioGroup;
    GroupBox3: TGroupBox;
    Label7: TLabel;
    Label3: TLabel;
    lbChauf: TLabel;
    Label9: TLabel;
    Label1: TLabel;
    edCodeLivreur: TEdit;
    edNomLivreur: TEdit;
    edChauf: TEdit;
    edPiece: TEdit;
    edNumMat: TEdit;
    edNomCamion: TEdit;
    edPtac: TEdit;
    GroupBox1: TGroupBox;
    Label12: TLabel;
    Label2: TLabel;
    Label13: TLabel;
    edcodeClt: TEdit;
    edNomClt: TEdit;
    edzone: TEdit;
    edPrixZone: TEdit;
    cbPoint: TComboBox;
    GroupBox2: TGroupBox;
    Label5: TLabel;
    Label6: TLabel;
    Label8: TLabel;
    v_edcodeArt: TEdit;
    v_edDesign: TEdit;
    edqte: TEdit;
    StringGrid1: TStringGrid;
    Panel2: TPanel;
    label11: TLabel;
    lbTbout: TLabel;
    Label4: TLabel;
    lbTkilo: TLabel;
    lbMontant: TLabel;
    Label10: TLabel;
    Panel3: TPanel;
    SpeedButton1: TSpeedButton;
    SpeedButton2: TSpeedButton;
    Button3: TButton;
    Button4: TButton;
    Button2: TButton;
    PopupMenu1: TPopupMenu;
    Supprimer1: TMenuItem;
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure edCodeLivreurDblClick(Sender: TObject);
    procedure edNumMatDblClick(Sender: TObject);
    procedure edcodeCltDblClick(Sender: TObject);
    procedure cbPointCloseUp(Sender: TObject);
    procedure v_edcodeArtDblClick(Sender: TObject);
    procedure edqteKeyPress(Sender: TObject; var Key: Char);
    procedure SpeedButton1Click(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmvteChargVeh: TfrmvteChargVeh;

implementation

{$R *.dfm}

uses UConnexion, records, UDM, URechLivreurChargement, UVteChargVehRechVeh,
  URechCltChargCamion, UrechVenteChargVeh;

procedure TfrmvteChargVeh.cbPointCloseUp(Sender: TObject);
var
  Sql : string;
  query : TSQLQuery;
begin

 query:= TSQLQuery.Create(self);
 query.SQLConnection := dm.SQLConnection1;

 sql := 'select * from tb_point_vente tpv '
      +' inner join tb_zone tz on tpv.zone = tz.nom_zone '
      +' where tpv.nom_point = '+QuotedStr(cbPoint.Text);

 try
   query.SQL.Add(sql);
   query.Open;

   edzone.Text := query.FieldByName('zone').AsString;
   edPrixZone.Text := query.FieldByName('prix_zone').AsString;
 finally
  query.Free;
  dm.SQLConnection1.Close;
 end;
end;

procedure TfrmvteChargVeh.edcodeCltDblClick(Sender: TObject);
begin
vFormSource_clt := 'frmvteChargVeh';
frmRechCltChargCamion.ShowModal;
end;

procedure TfrmvteChargVeh.edCodeLivreurDblClick(Sender: TObject);
begin
vSourceForm_liv := 'frmvteChargVeh';
frmRechLivreurChargement.showmodal;
end;

procedure TfrmvteChargVeh.edNumMatDblClick(Sender: TObject);
begin
vSourceForm := 'frmvteChargVeh';
frmVteChargVehRechVeh.ShowModal;
end;

procedure TfrmvteChargVeh.edqteKeyPress(Sender: TObject; var Key: Char);
var
  nbLigne : integer;
  I,vTBout: Integer;
  vTkg : real;
  stock : TStock;
  code_art : string;
begin
  if (Key=#13) then
    begin
      if (edqte.Text<>'') and (v_edcodeArt.Text<>'') then
         begin
            code_art := v_edcodeArt.Text;
            stock := dm.selectStockByArticle(code_art)  ;
            lbMontant.Caption := FloatToStr(StrToFloat(lbMontant.Caption) + (stock.Rcoutachat * StrToInt(edqte.Text)));

            nbLigne :=StringGrid1.RowCount+1;
            with StringGrid1 do
              begin
                RowCount := nbLigne;
                Cells[0,nbLigne-1]:=v_edcodeArt.Text;
                Cells[1,nbLigne-1]:=v_edDesign.Text;
                Cells[2,nbLigne-1]:=vkilo;
                Cells[3,nbLigne-1]:=edqte.Text;
                Cells[4,nbLigne-1]:=vAlias_art;
                Cells[5,nbLigne-1]:=vAlias_ret;
              end;
              if StringGrid1.RowCount>1 then StringGrid1.FixedRows:=1;

             vTBout := 0;
             vTkg := 0;

          for I := 1 to StringGrid1.RowCount-1 do
            begin
              vTBout := vTBout + StrToInt(StringGrid1.Cells[3,i]) ;
              vTkg := vTkg+ StrToFloat(StringGrid1.Cells[2,i])* StrToFloat(StringGrid1.Cells[3,i]);
            end;

            lbTbout.Caption := IntToStr(vTBout);
            lbTkilo.Caption := FloatToStr(vTkg);

            v_edcodeArt.Clear;
            v_edDesign.Clear;
            edqte.Clear;

          end //fin if key
          else
            MessageDlg('Merci de selectionner un article et d''entrer sa quantité',mtError,[mbOK],0);
    end;
end;

procedure TfrmvteChargVeh.FormCreate(Sender: TObject);
begin
with StringGrid1 do
  begin
    Cells[0,0]:='Code';
    Cells[1,0]:='Designation';
    Cells[2,0]:='Kg';
    Cells[3,0]:='Qte';
    Cells[4,0]:='Alias';
    Cells[5,0]:='Alias ret';
  end;

end;

procedure TfrmvteChargVeh.FormShow(Sender: TObject);
begin
  edLot.Text := vUsager+IntToStr(dm.SelectMaxLettrage.numLettrage+1) ;
//  DateCharg.Date := Now;
  DateCharg.Checked:=false;

end;

procedure TfrmvteChargVeh.SpeedButton1Click(Sender: TObject);
begin
  if MessageDlg('Voulez-vous changer de lot ?',mtConfirmation,[mbYes,mbNo],0) = mrYes then
    begin
      edLot.Text := IntToStr(StrToInt(edLot.Text)-1);
    end;
end;

procedure TfrmvteChargVeh.SpeedButton2Click(Sender: TObject);
begin
  if MessageDlg('Voulez-vous changer de lot ?',mtConfirmation,[mbYes,mbNo],0) = mrYes then
    begin
      edLot.Text := IntToStr(StrToInt(edLot.Text)+1) ;
    end;
end;

procedure TfrmvteChargVeh.v_edcodeArtDblClick(Sender: TObject);
begin
frmrechVenteChargVeh.ShowModal;
end;

end.
