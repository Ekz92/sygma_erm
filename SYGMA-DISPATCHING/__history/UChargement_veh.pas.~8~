unit UChargement_veh;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.FMTBcd, Data.DB, Data.SqlExpr,
  frxClass, frxDBSet, Vcl.Menus, Vcl.Buttons, Vcl.StdCtrls, Vcl.ComCtrls,
  Vcl.ExtCtrls, Vcl.Grids;

type
  TfrmChargement_veh = class(TForm)
    StringGrid1: TStringGrid;
    Panel1: TPanel;
    Label12: TLabel;
    lbnum_chargement: TLabel;
    Label3: TLabel;
    Label2: TLabel;
    Label1: TLabel;
    DateTimePicker1: TDateTimePicker;
    edKgs_max: TEdit;
    ednum_immat: TEdit;
    Panel2: TPanel;
    Label4: TLabel;
    Label17: TLabel;
    Label5: TLabel;
    Label10: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    SB_Annuler: TSpeedButton;
    SB_Add: TSpeedButton;
    ednum_bl: TEdit;
    edhis: TEdit;
    edtot_bout: TEdit;
    edTotal_kgs: TEdit;
    edPrix_liv: TEdit;
    edclient: TEdit;
    Panel3: TPanel;
    Label11: TLabel;
    lbtotal_kilo: TLabel;
    Label13: TLabel;
    Label15: TLabel;
    lbtot_bout: TLabel;
    Label16: TLabel;
    Label14: TLabel;
    lbprix_liv: TLabel;
    SB_valider: TSpeedButton;
    SB_Tout_Annuler: TSpeedButton;
    PopupMenu1: TPopupMenu;
    Modifierlaligne1: TMenuItem;
    Supprimerlaligne1: TMenuItem;
    RDispatching1: TfrxReport;
    frxHeader: TfrxDBDataset;
    QHeader: TSQLQuery;
    QHeaderid_mis_spec: TIntegerField;
    QHeadernum_matricule_chauf: TIntegerField;
    QHeadernum_immat_veh: TStringField;
    QHeadernum_ordre_mission: TStringField;
    QHeaderdate_depart: TDateField;
    QHeaderheure_depart: TTimeField;
    QHeaderType_mission: TIntegerField;
    QHeadernum_chargement: TStringField;
    QHeaderretour: TIntegerField;
    QHeaderid_chauf: TIntegerField;
    QHeadernum_mat_chauf: TIntegerField;
    QHeadernom_chauf: TStringField;
    QHeaderprenom_chauf: TStringField;
    QHeadertel_chauf: TStringField;
    QHeadermail_chauf: TStringField;
    QHeaderadresse_chauf: TStringField;
    frxDispatching: TfrxDBDataset;
    QDispatching: TSQLQuery;
    procedure ednum_immatDblClick(Sender: TObject);
    procedure ednum_blDblClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmChargement_veh: TfrmChargement_veh;

implementation

{$R *.dfm}

uses UChargement_rech_veh, UChargement_rech_bl;

procedure TfrmChargement_veh.ednum_blDblClick(Sender: TObject);
begin
if ednum_immat.Text='' then
  MessageDlg('Erreur'+chr(10)+'Selectionner un véhicule d''abord',mtError,[mbok],0)
else
  frmChargement_rech_bl.ShowModal;
end;

procedure TfrmChargement_veh.ednum_immatDblClick(Sender: TObject);
begin
frmchargement_Rech_veh.ShowModal;
end;

procedure TfrmChargement_veh.FormShow(Sender: TObject);
VAR
  QSelect_chargement : TSQLQuery;
  V_num_chargement : integer;
begin
DateTimePicker1.DateTime := StrToDateTime(DateTimeToStr(Now));
//------------------------ Générer le numéro du chargement ---------------
  QSelect_chargement:=TSQLQuery.Create(self);
  QSelect_chargement.SQLConnection:=dm.SQLConnection1;

  with QSelect_chargement,SQL do
    begin
      Add('select max(id_chargement) from tb_chargement_veh');
    end;
    try
      begin
        QSelect_chargement.Open;

        if QSelect_chargement.RecordCount = 0 then
          V_num_chargement := 1
        else
          V_num_chargement := QSelect_chargement.Fields[0].Value;
      end;
   finally
      QSelect_chargement.Free;
   end;

    lbnum_chargement.Caption := 'CH00'+IntToStr(V_num_chargement+1)
end;

end.
