unit URech_Article;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls, Data.FMTBcd,
  Data.DB, Data.SqlExpr;

type
  Tfrmrech_article = class(TForm)
    Label4: TLabel;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    edcode_art: TEdit;
    Edit2: TEdit;
    StringGrid1: TStringGrid;
    procedure FormShow(Sender: TObject);
    procedure StringGrid1DblClick(Sender: TObject);
    procedure StringGrid1DrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmrech_article: Tfrmrech_article;
  vFormSource_art : string;

implementation

{$R *.dfm}

uses UDM, records, UReguleStockCamion;

procedure Tfrmrech_article.FormShow(Sender: TObject);
var
  QSelect_art : TSQLQuery;
  I: Integer;
  sql :string;
begin
  StringGrid1.RowCount := 2;
  StringGrid1.Rows[1].Clear;

  QSelect_art:=TSQLQuery.Create(self);
  QSelect_art.SQLConnection:=dm.SQLConnection1;


      sql :=' Select * from tb_article ' ;

    try

      QSelect_art.SQL.Add(sql);
      QSelect_art.Open;

      for I := 1 to QSelect_art.RecordCount do
        with StringGrid1, QSelect_art do
          begin
            RowCount:=RecordCount+1;
            Cells[0,i] := FieldByName('code_art').AsString;
            Cells[1,i] := FieldByName('designation_art').AsString;
            Cells[2,i] := FieldByName('type_art').AsString;
            QSelect_art.Next
          end;
    finally
      QSelect_art.Free;
      dm.SQLConnection1.Close;
    end;

end;

procedure Tfrmrech_article.StringGrid1DblClick(Sender: TObject);
var
  stock :TStock;
  code_art : string;
begin
  code_art := StringGrid1.Cells[0,StringGrid1.Row];
  stock := dm.selectStockByArticle(code_art);

  if vFormSource_art = 'frmReguleStockCamion'then
    with frmReguleStockCamion ,StringGrid1 do
      begin
        edArticle.Text:= Cells[0,Row];
        edDesignation.Text :=Cells[1,row];
      end;

  close;
end;

procedure Tfrmrech_article.StringGrid1DrawCell(Sender: TObject; ACol,
  ARow: Integer; Rect: TRect; State: TGridDrawState);
begin
    with Sender As TStringGrid do with canvas do
    begin
      { selection de la couleur de fond}
      if gdFixed in State then
        Brush.Color:=clBtnFace
      else
        if gdSelected in State then
          Brush.Color:=clNavy//$00000046
        else
          if Odd(ARow) then
            Brush.Color :=$006A9BFF//$FFE0FF clgreen
          else
            Brush.Color:=$00FBDA97;//$FFFFE0  clBlue
      {Design du fond}
      FillRect(Rect);
      {Selection de la couleur d'ecriture}
      if gdSelected in State then
        font.Color:=clwhite
        else
        font.Color:=clblack;
      {Design du texte}
      TextOut(Rect.Left,Rect.Top,Cells[ACol,ARow]);
    end;

end;

end.
