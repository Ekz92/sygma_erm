unit USelectClientFacturation;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls;

type
  TfrmSelectClientFacturation = class(TForm)
    GroupBox1: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    edcodeClt: TEdit;
    edNomClt: TEdit;
    StringGrid1: TStringGrid;
    procedure edcodeCltChange(Sender: TObject);
    procedure StringGrid1DrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure edNomCltChange(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmSelectClientFacturation: TfrmSelectClientFacturation;

implementation

{$R *.dfm}

procedure TfrmSelectClientFacturation.edcodeCltChange(Sender: TObject);
var
  clients : TClientArray;
  Psql : string;
  i:integer;
begin
  Psql := ' where nom_clt like '+QuotedStr(edNomClt.Text+'%')
          +' and code_clt like '+QuotedStr(edcodeClt.Text+'%');

  clients := DM.selectClients(Psql);
  StringGrid1.RowCount:=Length(clients)+1;
  for I := Low(clients) to High(clients) do
    begin
      StringGrid1.Cells[0,i+1]:=clients[i].SCodeClt;
      StringGrid1.Cells[1,i+1]:=clients[i].SnomClt;
      StringGrid1.Cells[2,i+1]:=clients[i].SadresseClt;
      StringGrid1.Cells[3,i+1]:=clients[i].STarif;
    end;
    if StringGrid1.RowCount>1 then StringGrid1.FixedRows := 1;
end;

procedure TfrmSelectClientFacturation.edNomCltChange(Sender: TObject);
var
  clients : TClientArray;
  Psql : string;
  i:integer;
begin
  Psql := ' where nom_clt like '+QuotedStr(edNomClt.Text+'%')
          +' and code_clt like '+QuotedStr(edcodeClt.Text+'%');

  clients := DM.selectClients(Psql);
  StringGrid1.RowCount:=Length(clients)+1;
  for I := Low(clients) to High(clients) do
    begin
      StringGrid1.Cells[0,i+1]:=clients[i].SCodeClt;
      StringGrid1.Cells[1,i+1]:=clients[i].SnomClt;
      StringGrid1.Cells[2,i+1]:=clients[i].SadresseClt;
      StringGrid1.Cells[3,i+1]:=clients[i].STarif;
    end;
    if StringGrid1.RowCount>1 then StringGrid1.FixedRows := 1;
end;

procedure TfrmSelectClientFacturation.StringGrid1DrawCell(Sender: TObject; ACol,
  ARow: Integer; Rect: TRect; State: TGridDrawState);
begin
    with Sender As TStringGrid do with canvas do
    begin
      { selection de la couleur de fond}
      if gdFixed in State then
        Brush.Color:=clBtnFace
      else
        if gdSelected in State then
          Brush.Color:=clNavy//$00000046
        else
          if Odd(ARow) then
            Brush.Color :=$006A9BFF//$FFE0FF clgreen
          else
            Brush.Color:=$00FBDA97;//$FFFFE0  clBlue
      {Design du fond}
      FillRect(Rect);
      {Selection de la couleur d'ecriture}
      if gdSelected in State then
        font.Color:=clwhite
        else
        font.Color:=clblack;
      {Design du texte}
      TextOut(Rect.Left,Rect.Top,Cells[ACol,ARow]);
    end;
end;

end.
