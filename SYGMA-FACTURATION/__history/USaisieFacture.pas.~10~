unit USaisieFacture;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.FMTBcd, frxClass, frxDBSet,
  Data.DB, Data.SqlExpr, Vcl.Menus, Vcl.StdCtrls, Vcl.ComCtrls, Vcl.Grids,
  Vcl.ExtCtrls;

type
  TfrmSaisieFacture = class(TForm)
    Splitter1: TSplitter;
    Panel2: TPanel;
    Panel3: TPanel;
    Label14: TLabel;
    lbMontant: TLabel;
    st_saisie: TStringGrid;
    Panel1: TPanel;
    GbMagasin: TGroupBox;
    Label2: TLabel;
    Label8: TLabel;
    edCodeMag: TEdit;
    eddesignation_mag: TEdit;
    GbClient: TGroupBox;
    Label7: TLabel;
    Label10: TLabel;
    Label1: TLabel;
    ednomClient: TEdit;
    edCodeClient: TEdit;
    edTarif: TEdit;
    Gb_Article: TGroupBox;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    ed_article: TEdit;
    eddesignation_art: TEdit;
    edqte: TEdit;
    gbEtete: TGroupBox;
    Label11: TLabel;
    Label3: TLabel;
    Label9: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    cbTypeFact: TComboBox;
    edNumFact: TEdit;
    edveh: TEdit;
    edCommande: TEdit;
    eddate: TDateTimePicker;
    pnBouton: TPanel;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    PopupMenu1: TPopupMenu;
    Supprimer1: TMenuItem;
    QFacture: TSQLQuery;
    frxFacturation: TfrxReport;
    frxQFacture: TfrxDBDataset;
    procedure st_saisieDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure edCodeMagDblClick(Sender: TObject);
    procedure edCodeClientDblClick(Sender: TObject);
    procedure ed_articleDblClick(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmSaisieFacture: TfrmSaisieFacture;
  vCode_mag : string;
  vPrixVente,
  vMnt_t,
  vMnt_p,
  vMnt_r  : real;
  vQteTotal : integer;

implementation

{$R *.dfm}

uses USelectClientFacturation, UFacturation_rech_magasin, Ufacture_rech_art;

procedure TfrmSaisieFacture.edCodeClientDblClick(Sender: TObject);
begin
if cbTypeFact.Text =''  then
  begin
    MessageDlg('Veuillez spécifier le type de la facture',mtWarning,[mbRetry],0);
  end else
  if (cbTypeFact.Text = 'Camion') and (Trim(edveh.Text)='') then
    begin
      MessageDlg('Veuillez spécifier le numéro matricule',mtWarning,[mbRetry],0);
    end else
    begin
      vFormclt := 'SFP';
      frmSelectClientFacturation.ShowModal;
    end;

end;

procedure TfrmSaisieFacture.edCodeMagDblClick(Sender: TObject);
begin
  frmFacturationRech_mag.ShowModal;
end;

procedure TfrmSaisieFacture.ed_articleDblClick(Sender: TObject);
var
  ColCmp : integer;
begin
  ColCmp :=frmfacture_rech_art.St_Art.ColCount;

  if cbTypeFact.Text <> 'Comptoir' then
    begin
      frmfacture_rech_art.St_Art.ColCount:= 4;//ColCmp-1;
    end else
    begin
      frmfacture_rech_art.St_Art.ColCount:=5;//ColCmp;
    end;
vCode_mag:=edCodeMag.Text;
frmfacture_rech_art.ShowModal;
end;

procedure TfrmSaisieFacture.st_saisieDrawCell(Sender: TObject; ACol,
  ARow: Integer; Rect: TRect; State: TGridDrawState);
begin
    with Sender As TStringGrid do with canvas do
    begin
      { selection de la couleur de fond}
      if gdFixed in State then
        Brush.Color:=clBtnFace
      else
        if gdSelected in State then
          Brush.Color:=clNavy//$00000046
        else
          if Odd(ARow) then
            Brush.Color :=$006A9BFF//$FFE0FF clgreen
          else
            Brush.Color:=$00FBDA97;//$FFFFE0  clBlue
      {Design du fond}
      FillRect(Rect);
      {Selection de la couleur d'ecriture}
      if gdSelected in State then
        font.Color:=clwhite
        else
        font.Color:=clblack;
      {Design du texte}
      TextOut(Rect.Left,Rect.Top,Cells[ACol,ARow]);
    end;

end;

end.
