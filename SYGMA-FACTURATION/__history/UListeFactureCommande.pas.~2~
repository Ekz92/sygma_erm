unit UListeFactureCommande;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.FMTBcd, frxClass, frxDBSet,
  Data.DB, Data.SqlExpr, Vcl.Menus, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Grids,
  Vcl.ComCtrls, Vcl.Buttons;

type
  TfrmListeFactureCommande = class(TForm)
    GroupBox1: TGroupBox;
    Label2: TLabel;
    Label3: TLabel;
    SpeedButton1: TSpeedButton;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    lbtotal: TLabel;
    lbtotpaye: TLabel;
    lbtotreste: TLabel;
    cbStatut: TComboBox;
    d1: TDateTimePicker;
    d2: TDateTimePicker;
    edCommande: TEdit;
    edvehicule: TEdit;
    edStatutCmd: TEdit;
    St_listeFacture: TStringGrid;
    Panel1: TPanel;
    Button1: TButton;
    Button2: TButton;
    cbprint: TComboBox;
    PopupMenu1: TPopupMenu;
    Consultation1: TMenuItem;
    QConsultation: TSQLQuery;
    frxDBConsultation: TfrxDBDataset;
    Rconsultation: TfrxReport;
    RFactureListe: TfrxReport;
    frxRFactureListe: TfrxDBDataset;
    QFactureListe: TSQLQuery;
    RFactureListed: TfrxReport;
    QFactureListed: TSQLQuery;
    frxDBDataset1: TfrxDBDataset;
    procedure SpeedButton1Click(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmListeFactureCommande: TfrmListeFactureCommande;

implementation

{$R *.dfm}

procedure TfrmListeFactureCommande.SpeedButton1Click(Sender: TObject);
var
  Psql, Statut : string;
  Factures : TFacturationArray;
  I: Integer;

  vtot,vtotp,vtotr : real;
begin
if Trim(edCommande.Text)<>'' then
  begin
    if cbStatut.Text = 'Payée' then Statut := 'PA' else
    if cbStatut.Text = 'En attente' then Statut := 'AT' else
    if cbStatut.Text = 'Forcée' then Statut := 'FO' ;

    if cbStatut.Text<>'' then
    Psql := ' where date_fact between '+QuotedStr(FormatDateTime('yyyy-mm-dd ',d1.Date)+'00:00:00')
            +' and '+QuotedStr(FormatDateTime('yyyy-mm-dd ',d2.Date)+'23:59:59')
            +' and num_comc = '+QuotedStr(edCommande.Text)
            +' and statut = '+QuotedStr(Statut)
            +' and statut_canc = 0 '
            +' order by date_fact desc '
    else
    Psql := ' where date_fact between '+QuotedStr(FormatDateTime('yyyy-mm-dd ',d1.Date)+'00:00:00')
            +' and '+QuotedStr(FormatDateTime('yyyy-mm-dd ',d2.Date)+'23:59:59')
            +' and num_comc = '+QuotedStr(edCommande.Text)
            +' and statut_canc = 0 '
            +' order by date_fact desc ';

    Factures := dm.SelectFactures(Psql);
    St_listeFacture.RowCount := Length(Factures)+1;

    vtot :=0;
    vtotp:=0;
    vtotr:=0;

    for I := Low(Factures) to High(Factures) do
      begin
        with St_listeFacture do
          begin
            Cells[0,i+1] := Factures[i].Sdate_fact;
            Cells[1,i+1] := Factures[i].SNum_fact;
            Cells[2,i+1] := Factures[i].Snom_clt;
            Cells[3,i+1] := FloatToStr(Factures[i].Rmnt_t);
            Cells[4,i+1] := FloatToStr(Factures[i].Rmnt_p);
            Cells[5,i+1] := FloatToStr(Factures[i].Rmnt_r);
            Cells[6,i+1] := Factures[i].Sstatut;
          end;
          vtot := vtot + Factures[i].Rmnt_t;
          vtotp:= vtotp + Factures[i].Rmnt_p;
          vtotr:= vtotr +Factures[i].Rmnt_r;
      end;
      if St_listeFacture.RowCount>1 then
        St_listeFacture.FixedRows := 1;

      lbtotal.Caption := FloatToStrF(vtot,TFloatFormat(ffNumber),15,2)   ;
      lbtotpaye.Caption := FloatToStrF(vtotp,TFloatFormat(ffNumber),15,2) ;
      lbtotreste.Caption := FloatToStrF(vtotr,TFloatFormat(ffNumber),15,2);
  end else
  MessageDlg('Merci de spécifier la cammande',mtError,[mbOk],0);
end;

end.
