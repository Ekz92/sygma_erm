unit UAdd_Type_article;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids, Vcl.Buttons,
  Vcl.ExtCtrls, Data.FMTBcd, Data.DB, Data.SqlExpr, Vcl.Menus;

type
  TfrmAdd_Type_article = class(TForm)
    StringGrid1: TStringGrid;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    edType_art: TEdit;
    SpeedButton1: TSpeedButton;
    SpeedButton2: TSpeedButton;
    PopupMenu1: TPopupMenu;
    Modifier1: TMenuItem;
    Supprimer1: TMenuItem;
    procedure FormActivate(Sender: TObject);
    procedure StringGrid1DrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure SpeedButton1Click(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmAdd_Type_article: TfrmAdd_Type_article;

implementation

{$R *.dfm}

uses UDM;

procedure TfrmAdd_Type_article.FormActivate(Sender: TObject);
var
  QSelect_Tart: TSQLQuery;
  i : integer;
begin
//--------------Affichage -----------------------

  QSelect_Tart:=TSQLQuery.Create(self);
  QSelect_Tart.SQLConnection:=dm.SQLConnection1;

  with QSelect_Tart, SQL do
    begin
      Add('select * from tb_type_article order by id_type_art desc');
    end;

    try
      QSelect_Tart.open;

      for I := 1 to QSelect_Tart.RecordCount do
        with StringGrid1 do
          begin
            RowCount :=  QSelect_Tart.RecordCount +1;
            Cells[0,i]:=IntToStr(i);
            Cells[1,i]:=QSelect_Tart.FieldByName('designation_type_art').AsString;
            QSelect_Tart.Next;
          end;
    finally
      QSelect_Tart.Free;
    end;
end;

procedure TfrmAdd_Type_article.SpeedButton1Click(Sender: TObject);
var
  QInsert_Tart,
  QSelect_Tart : TSQLQuery;
  I: Integer;
begin
//----------------Insertion ------------------
  QInsert_Tart:=TSQLQuery.Create(self);
  QInsert_Tart.SQLConnection:=dm.SQLConnection1;

  with QInsert_Tart, SQL do
    begin
      Add('insert into tb_Type_article values(null,'
        +trim(QuotedStr(edType_art.Text))+')'
      );
    end;

    try
      if (Trim(edType_art.Text)<>'') then
        QInsert_Tart.ExecSQL()
      else
        MessageDlg('Veillez renseigner le champ svp',mtError,[mbRetry],0);
    finally
      QInsert_Tart.Free;
      dm.SQLConnection1.Close;
    end;

//--------------Affichage -----------------------

  QSelect_Tart:=TSQLQuery.Create(self);
  QSelect_Tart.SQLConnection:=dm.SQLConnection1;

  with QSelect_Tart, SQL do
    begin
      Add('select * from tb_Type_article order by id_type_art desc');
    end;

    try
      QSelect_Tart.Open;

      for I := 1 to QSelect_Tart.RecordCount do
        with StringGrid1 do
          begin
            RowCount :=  QSelect_Tart.RecordCount +1;
            Cells[0,i]:=IntToStr(i);
            Cells[1,i]:=QSelect_Tart.FieldByName('designation_Type_art').AsString;
            QSelect_Tart.Next;
          end;
    finally
      QSelect_Tart.Free;
    end;
SpeedButton2.Click;
end;


procedure TfrmAdd_Type_article.SpeedButton2Click(Sender: TObject);
begin
edType_art.Clear;
Close;

end;

procedure TfrmAdd_Type_article.StringGrid1DrawCell(Sender: TObject; ACol,
  ARow: Integer; Rect: TRect; State: TGridDrawState);
begin
    with Sender As TStringGrid do with canvas do
    begin
      { selection de la couleur de fond}
      if gdFixed in State then
        Brush.Color:=clBtnFace
      else
        if gdSelected in State then
          Brush.Color:=clNavy//$00000046
        else
          if Odd(ARow) then
            Brush.Color :=$006A9BFF//$FFE0FF clgreen
          else
            Brush.Color:=$00FBDA97;//$FFFFE0  clBlue
      {Design du fond}
      FillRect(Rect);
      {Selection de la couleur d'ecriture}
      if gdSelected in State then
        font.Color:=clwhite
        else
        font.Color:=clblack;
      {Design du texte}
      TextOut(Rect.Left,Rect.Top,Cells[ACol,ARow]);
    end;

end;

end.
