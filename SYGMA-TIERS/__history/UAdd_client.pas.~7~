unit UAdd_client;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.Grids, Vcl.StdCtrls,
  Vcl.Buttons, Vcl.ExtCtrls;

type
  TfrmAdd_client = class(TForm)
    Label7: TLabel;
    Label8: TLabel;
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    SpeedButton1: TSpeedButton;
    SpeedButton2: TSpeedButton;
    Label10: TLabel;
    Label9: TLabel;
    MemoComment: TMemo;
    edNom: TEdit;
    edAdresse: TEdit;
    edTel: TEdit;
    edEmail: TEdit;
    edcodeclt: TEdit;
    cbTarif: TComboBox;
    edCodeTarif: TEdit;
    GroupBox1: TGroupBox;
    Label6: TLabel;
    edNomRech: TEdit;
    StringGrid1: TStringGrid;
    PopupMenu1: TPopupMenu;
    Consulter1: TMenuItem;
    Modifier1: TMenuItem;
    Supprimer1: TMenuItem;
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
  private
    { Déclarations privées }
  public
    { Déclarations publiques }
  end;

var
  frmAdd_client: TfrmAdd_client;

implementation

{$R *.dfm}

procedure TfrmAdd_client.FormActivate(Sender: TObject);
begin
MemoComment.Clear;
edcodeclt.SetFocus;

end;

procedure TfrmAdd_client.FormClose(Sender: TObject; var Action: TCloseAction);
begin
cbTarif.Clear;
end;

procedure TfrmAdd_client.FormCreate(Sender: TObject);
begin
with StringGrid1 do
  begin
    Cells[0,0]:='Code';
    Cells[1,0]:='Nom';
    Cells[2,0]:='Tel';
    Cells[3,0]:='Adresse';
    Cells[4,0]:='E-mail';
    Cells[5,0]:='Comment.';
    Cells[6,0]:='Tarif'
  end;
end;

procedure TfrmAdd_client.FormShow(Sender: TObject);
var
  Clients : TClientArray;
  Psql : string;
  I: Integer;

  Tarifs : TTarifArray;
  //I: Integer;
  Psql_tarif :string;

begin
  Psql :=' order by id_clt desc';
  Clients:=dm.selectClients(Psql);
  StringGrid1.RowCount := Length(Clients)+1;
  for I := Low(Clients) to High(Clients) do
    begin
      with StringGrid1 do
        begin
          Cells[0,i+1] := Clients[i].SCodeClt;
          Cells[1,i+1] := Clients[i].SnomClt;
          Cells[2,i+1] := Clients[i].StelClt;
          Cells[3,i+1] := Clients[i].SadresseClt;
          Cells[4,i+1] := Clients[i].Smail;
          Cells[5,i+1] := Clients[i].ScommentClt;
          Cells[6,i+1] := Clients[i].STarif;
        end;
    end;
    if StringGrid1.RowCount>1 then StringGrid1.FixedRows := 1;
//************** Affichage du tarif********

  Psql_tarif :='';

  Tarifs := DM.SelectTarif(Psql_tarif);

  for I := Low(Tarifs) to High(Tarifs) do
    begin
      cbTarif.Items.Add(Tarifs[i].SDesignation_tarif);
    end;
end;

end.
